@model Productions
@{
    int? receiptNo = Model?.ReceiptNo;
}
<div class="row">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().CheckBoxFor(m => m.IsDelivery, settings =>
            {
                settings.Properties.Caption = "Is Delivery";

                settings.Width = Unit.Percentage(100);
                settings.Properties.ClientSideEvents.ValueChanged = "function(s,e){ProductionGridView.PerformCallback({isDelivery:s.GetValue()})}";
            }).GetHtml();
        }
    </div>
</div>
<div class="row">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().ComboBoxFor(m => m.ReceiptNo, settings =>
            {
                settings.Properties.Caption = "Receipt No";
                settings.Properties.TextField = "ReceiptNumber";
                settings.Properties.ValueField= "ReceiptNumber";
                settings.Properties.NullText = settings.Properties.Caption;
                settings.Width = Unit.Percentage(100);
                settings.Properties.ClientSideEvents.ValueChanged = "function(s,e){ProductionGridView.PerformCallback({ReceiptNo:s.GetValue(),SagId:SagId.GetValue()})}";
            }).BindList(ViewBag.ReceiptNo).GetHtml();
        }
    </div>
</div>
<div class="row">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().DateEditFor(m => m.ReceiptDate, settings =>
            {
                settings.Properties.NullText = "Receipt Date";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "ReceiptDate";
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.Display = Display.Dynamic;
            }).GetHtml();
        }
    </div>
</div>
@*<div class=" row ">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().ComboBoxFor(m => m.PermiteeId, settings =>
            {
                settings.Properties.NullText = "Permitee";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Permitee";
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.Display = Display.Dynamic;
                settings.Properties.TextField = "Permittee";
                settings.Properties.ValueField = "Id";
                settings.Properties.ClientSideEvents.ValueChanged = "function(s,e){DeliveriesGridView.PerformCallback({PermiteeId:s.GetValue(),SagId:SagId.GetValue()})}";
            }).BindList(new UnitOfWork().PermiteesRepo.Get().Select(x=>new{Permittee=x.CompanyName+"-"+x.FullName,x.Id})).GetHtml();
        }
    </div>
</div>*@
<div class=" row ">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().ComboBoxFor(m => m.QuarriesId, settings =>
            {
                settings.Properties.NullText = @"Quarry Name";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Quarry Name";
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.Display = Display.Dynamic;
                settings.Properties.TextField = "QuarryName";
                settings.Properties.ValueField = "Id";
                 settings.Properties.ClientSideEvents.ValueChanged = "function(s,e){ProductionGridView.PerformCallback({PermiteeId:s.GetValue()})}";
            }).BindList(new UnitOfWork().TransactionsRepo.Find(m=>m.DeliveryReceipts.Any(x=>x.ReceiptNumber==receiptNo))?.Permitees?.Quarries).GetHtml();
        }
    </div>
</div>
<div class=" row ">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().ComboBoxFor(m => m.SagId, settings =>
            {
                settings.Properties.NullText = "Sag";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Sag";
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.Display = Display.Dynamic;
                settings.Properties.TextField = "Sag";
                settings.Properties.ValueField = "Id";
                settings.Properties.ClientSideEvents.ValueChanged = "function(s,e){ProductionGridView.PerformCallback({ReceiptNo:ReceiptNo.GetValue(),SagId:s.GetValue()})}";
            }).BindList(new UnitOfWork().SagsRepo.Get()).GetHtml();
        }
    </div>
</div>
<div class=" row ">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().ComboBoxFor(m => m.VehicleId, settings =>
            {
                settings.Properties.NullText = "Plate No";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Plate No";
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.Display = Display.Dynamic;
                settings.Properties.TextField = "PlateNo";
                settings.Properties.ValueField = "Id";
            }).BindList(new UnitOfWork().TransactionsRepo.Find(m => m.DeliveryReceipts.Any(x => x.ReceiptNumber == receiptNo))?.Permitees?.Vehicles).GetHtml();
        }
    </div>
</div>
<div class=" row ">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().SpinEditFor(m => m.Quantity, settings =>
            {
                settings.ClientEnabled = Model?.RemainingSagQuantity == 0 || Model?.RemainingSagQuantity == null ? false : true;
                settings.Properties.NullText = "Quantity";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Quantity";
                settings.ShowModelErrors = true;
                settings.Properties.MaxValue = Model?.RemainingSagQuantity ?? 0;
                //     settings.Properties.MaxLength= ViewBag.RemainingSagQuantity ?? 0;
                settings.Properties.MinValue = 0;
                settings.Properties.ValidationSettings.Display = Display.Dynamic;

            }).GetHtml();
        }
    </div>
</div>
@if (Model?.IsDelivery == true)
{
    <div class=" row ">
        <div class="col-md-12 col-lg-12">
            @{
                Html.DevExpress().ComboBoxFor(m => m.DestinationId, settings =>
                {
                    settings.Properties.NullText = "Destination";
                    settings.Width = Unit.Percentage(100);
                    settings.Properties.Caption = "Destination";
                    settings.ShowModelErrors = true;
                    settings.Properties.ValidationSettings.Display = Display.Dynamic;
                    settings.Properties.TextField = "Name";
                    settings.Properties.ValueField = "Id";
                }).BindList(new UnitOfWork().TownsRepo.Get()).GetHtml();
            }
        </div>
    </div>
                }
else
{
    <div class=" row ">
        <div class="col-md-12 col-lg-12">
            @{
                Html.DevExpress().ComboBoxFor(m => m.ProgramOfWorkId, settings =>
                {
                    settings.Properties.NullText = "Program Of Work";
                    settings.Width = Unit.Percentage(100);
                    settings.Properties.Caption = "Program Of Work";
                    settings.ShowModelErrors = true;
                    settings.Properties.ValidationSettings.Display = Display.Dynamic;
                    settings.Properties.TextField = "Name";
                    settings.Properties.ValueField = "Id";
                }).BindList(new UnitOfWork().ProgramOfWorksRepo.Get()).GetHtml();
            }
        </div>
    </div>
}
<div class=" row ">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().ComboBoxFor(m => m.OriginId, settings =>
            {
                settings.Properties.NullText = "Origin";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Origin";
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.Display = Display.Dynamic;
                settings.Properties.TextField = "Name";
                settings.Properties.ValueField = "Id";
            }).BindList(new UnitOfWork().TownsRepo.Get()).GetHtml();
        }
    </div>
</div>
<div class="row margin-top-10">
    <div class="col-lg-12 col-md-12 ">
        @{
            Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnSubmit";
                settings.Text = "Submit";
                settings.ClientSideEvents.Click = "function(s,e){ProductionGridView.UpdateEdit()}";
            }).GetHtml();
            Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnCancel";
                settings.Text = "Cancel";
                settings.ControlStyle.CssClass = "margin-left-10";
                settings.ClientSideEvents.Click = "function(s,e){ProductionGridView.CancelEdit()}";
            }).GetHtml();
        }
    </div>
</div>


