@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "VehiclesGridView";
        settings.Width = Unit.Percentage(100);
        settings.CallbackRouteValues = new { Controller = "FileManagement", Action = "VehiclesGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "FileManagement", Action = "VehiclesGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "FileManagement", Action = "VehiclesGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "FileManagement", Action = "VehiclesGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.AddEditDeleteImportToolbar(tbSettings =>
        {
            tbSettings.SetTemplateContent(col =>
            {
                Html.DevExpress().Button(btnSettings =>
                {
                    btnSettings.Name = "btnImport";
                    btnSettings.Text = "Import";
                    btnSettings.ClientEnabled = User.UserIsInAction("Import Vehicles");
                    btnSettings.ClientSideEvents.Click = "function(s,e){ShowPopupFilemanagementImport('ImportVehicleUploadControlUpload','filemanagementImport')}";

                }).GetHtml();
                Html.DevExpress().HyperLink(lnkSettings =>
                {
                    lnkSettings.Name = "lnkDownload";

                    lnkSettings.ClientEnabled = User.UserIsInAction("Download Vehicle Template");
                    lnkSettings.NavigateUrl = Url.Action("DownloadTemplates", new { template = "vehicle" });
                    lnkSettings.Properties.Text = "Download Vehicle Template";
                    lnkSettings.Style.Add(HtmlTextWriterStyle.MarginLeft, "5px");
                }).GetHtml();
            });
        });
        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 300;
        settings.Columns.Add(col =>
        {
            col.FieldName = "Permitees.FullName";
            col.Caption = "Permitee";
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cbo = col.PropertiesEdit as ComboBoxProperties;
            cbo.DataSource = (Model as List<Vehicles>)?.GroupBy(m => m.Permitees.FullName).Select(x =>new{ FullName = x.Key});
            cbo.ValueField = "FullName";
            cbo.TextField = "FullName";

        });

        settings.Columns.Add("VehicleTypes.VehicleTypeName");
        settings.Columns.Add(col =>
        {
            col.FieldName = "PlateNo";
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cbo = col.PropertiesEdit as ComboBoxProperties;

            cbo.DataSource = Model as List<Vehicles>;
            cbo.ValueField = "PlateNo";
            cbo.TextField = "PlateNo";
        });
        settings.SetEditFormTemplateContent(col =>
        {
            Html.DevExpress().PopupControl(pop =>
            {
                pop.HeaderText = DataBinder.Eval(col.DataItem, "Permitees.FullName")?.ToString() ?? "Permitee";
                pop.Width = Unit.Pixel(700);
                pop.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
                pop.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
                pop.Name = col.KeyValue + "_popup";
                pop.Modal = true;
                pop.ShowOnPageLoad = true;
                pop.CloseOnEscape = false;
                pop.ShowCloseButton = true;
                pop.ClientSideEvents.CloseUp = "function(s,e){VehiclesGridView.CancelEdit()}";
                pop.CloseAction = CloseAction.CloseButton;
                pop.SetContent(() =>
                {
                    if (ViewData["EditError"] != null && ViewData["Model"] != null)
                    {
                        Html.RenderPartial("AddEditVehiclePartial", ViewData["Model"]);
                    }
                    else
                    {
                        Html.RenderAction("AddEditVehiclePartial", new { vehicleId = col.KeyValue });
                    }
                });
            }).GetHtml();

        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()