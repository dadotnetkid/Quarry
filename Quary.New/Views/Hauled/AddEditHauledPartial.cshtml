@model Hauleds
@{

}
@Html.HiddenFor(m => m.DateCreated)
@Html.HiddenFor(m => m.CreatedBy)
<div class="row">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().TextBoxFor(m => m.TransportSlip, settings =>
            {
                settings.Properties.Caption = "Transport Slip";
                settings.Width = Unit.Percentage(100);
            }).GetHtml();
        }
    </div>
</div>
<div class="row">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().ComboBoxFor(m => m.ProgramOfWorkId, settings =>
            {
                settings.Properties.Caption = "Program Of Works";
                settings.Width = Unit.Percentage(100);
                settings.Properties.ValueField = "Id";
                settings.Properties.TextField = "Name";
            }).BindList(new UnitOfWork().ProgramOfWorksRepo.Get()).GetHtml();
        }
    </div>
</div>


@*<div class=" row ">
        <div class="col-md-12 col-lg-12">
            @{
                Html.DevExpress().ComboBoxFor(m => m.PermiteeId, settings =>
                {
                    settings.Properties.NullText = "Permitee";
                    settings.Width = Unit.Percentage(100);
                    settings.Properties.Caption = "Permitee";
                    settings.ShowModelErrors = true;
                    settings.Properties.ValidationSettings.Display = Display.Dynamic;
                    settings.Properties.TextField = "Permittee";
                    settings.Properties.ValueField = "Id";
                    settings.Properties.ClientSideEvents.ValueChanged = "function(s,e){DeliveriesGridView.PerformCallback({PermiteeId:s.GetValue(),SagId:SagId.GetValue()})}";
                }).BindList(new UnitOfWork().PermiteesRepo.Get().Select(x=>new{Permittee=x.CompanyName+"-"+x.FullName,x.Id})).GetHtml();
            }
        </div>
    </div>*@

<div class=" row ">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().ComboBoxFor(m => m.SagId, settings =>
            {
                settings.Properties.NullText = "Sag";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Sag";
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.Display = Display.Dynamic;
                settings.Properties.TextField = "Sag";
                settings.Properties.ValueField = "Id";
            }).BindList(new UnitOfWork().SagsRepo.Get()).GetHtml();
        }
    </div>
</div>

<div class=" row ">
    <div class="col-md-12 col-lg-12">
        @{
            Html.DevExpress().SpinEditFor(m => m.Quantity, settings =>
            {
                settings.Properties.NullText = "Quantity";
                settings.Width = Unit.Percentage(100);
                settings.Properties.Caption = "Quantity";
                settings.ShowModelErrors = true;
                //     settings.Properties.MaxLength= ViewBag.RemainingSagQuantity ?? 0;
                settings.Properties.MinValue = 0;
                settings.Properties.ValidationSettings.Display = Display.Dynamic;
                settings.Properties.DisplayFormatString = @"##.##";
                settings.Properties.NumberType = SpinEditNumberType.Float;
            }).GetHtml();
        }
    </div>
</div>

<div class="row margin-top-10">
    <div class="col-lg-12 col-md-12 ">
        @{
            Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnSubmit";
                settings.Text = "Submit";
                settings.ClientSideEvents.Click = "function(s,e){HauledGridView.UpdateEdit()}";
            }).GetHtml();
            Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnCancel";
                settings.Text = "Cancel";
                settings.ControlStyle.CssClass = "margin-left-10";
                settings.ClientSideEvents.Click = "function(s,e){HauledGridView.CancelEdit()}";
            }).GetHtml();
        }
    </div>
</div>


