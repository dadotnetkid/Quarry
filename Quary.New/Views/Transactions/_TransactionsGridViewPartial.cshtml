@{
    var transaction = ViewBag.Transactions as Transactions;
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Width = Unit.Percentage(100);
        settings.Name = "TransactionsGridView";
        settings.CallbackRouteValues = new { Controller = "Transactions", Action = "TransactionsGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Transactions", Action = "TransactionsGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Transactions", Action = "TransactionsGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Transactions", Action = "TransactionsGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = false;
        settings.CommandColumn.ShowNewButtonInHeader = false;
        settings.CommandColumn.ShowDeleteButton = false;
        settings.CommandColumn.ShowEditButton = false;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.ClientSideEvents.SelectionChanged = "function(s,e){ReportViewShow()}";
        settings.ClientSideEvents.Init = "function(s,e){GridSelectionChanged(s,e)}";

        settings.Toolbars.Add(tb =>
        {
            tb.Enabled = true;
            tb.Position = GridToolbarPosition.Top;


            tb.Items.Add(GridViewToolbarCommand.New);
            tb.Items.Add(GridViewToolbarCommand.Edit);
            tb.Items.Add(GridViewToolbarCommand.Delete);
            tb.Items.Add(i =>
            {
                i.Command = GridViewToolbarCommand.Refresh;
                i.BeginGroup = true;
                i.AdaptivePriority = 1;
            });
            tb.Items.Add(content =>
            {
                content.SetTemplateContent(coln =>
                {
                    Html.DevExpress().Button(btnSettings =>
                    {
                        btnSettings.Name = "btnPrint";
                        btnSettings.ClientSideEvents.Click = "function(s,e){ShowSignatories()}";
                        btnSettings.Text = "Print";
                        btnSettings.ClientEnabled = false;
                //if (DataBinder.Eval(content.DataItem, "Id") == null)
                //    btnSettings.ClientEnabled = false;
            }).GetHtml();
                });

            });
        });

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.ClientSideEvents.SelectionChanged = "function(s,e){GridSelectionChanged(s,e);}";

        settings.Columns.Add(col =>
        {
            col.FieldName = "TransactionNumber";
            col.Caption = "Trans. No";
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cbo = col.PropertiesEdit as ComboBoxProperties;
            cbo.DataSource = (Model as List<Transactions>)?.Select(x => new { TransactionNumber = x.TransactionNumber });
            cbo.TextField = "TransactionNumber";
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "Permitees.FullName";
            col.Caption = "Permitee";
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cbo = col.PropertiesEdit as ComboBoxProperties;
            cbo.DataSource = (Model as List<Transactions>)?.Select(x => new { FullName = x?.Permitees?.FullName });
            cbo.TextField = "FullName";
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "Permitees.PermiteeTypes.PermiteeTypeName";
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cbo = col.PropertiesEdit as ComboBoxProperties;
            cbo.DataSource = (Model as List<Transactions>)?.Select(x => new { PermiteeTypeName = x.Permitees?.PermiteeTypes?.PermiteeTypeName });
            cbo.TextField = "PermiteeTypeName";
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "TransactionDate";
            col.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
            col.ColumnType = MVCxGridViewColumnType.DateEdit;
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "TransactionTotal";
            col.ColumnType = MVCxGridViewColumnType.TextBox;
            col.PropertiesEdit.DisplayFormatString = "N2";
            col.Settings.AllowAutoFilter = DefaultBoolean.False;
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "IsPaid";
            col.ColumnType = MVCxGridViewColumnType.CheckBox;
        });

        settings.SetEditFormTemplateContent(col =>
        {
    /* if (ViewBag.TransactionId != null && ViewBag.PermiteeId != null)
     {
         Html.RenderPartial("TransactionCallbackPanel");
     }
     else
     {
         var permiteeId =  DataBinder.Eval(col.DataItem, "PermiteeId");
         var transactionId = col.KeyVale;
         Html.RenderAction("TransactionCallbackPanel", new { transactionId = col.KeyValue, permiteeId= permiteeId });
     }*/
    //@Html.RenderPartial("AddEditTransactionPartial", new { PermiteeId = ViewBag.PermiteeId, TransationId = ViewBag.TransactionId });
    var permiteeId = DataBinder.Eval(col.DataItem, "PermiteeId");
            var transactionId = col.KeyValue;
            Html.DevExpress().PopupControl(pop =>
            {
                pop.HeaderText = DataBinder.Eval(col.DataItem, "TransactionNumber")?.ToString() != null ? ("Trans. No " + DataBinder.Eval(col.DataItem, "TransactionNumber")?.ToString()) : "New Transaction";

                pop.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
                pop.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
                pop.Name = col.KeyValue + "_popup";
                pop.Modal = true;
                pop.ShowOnPageLoad = true;
                pop.CloseOnEscape = false;
                pop.ShowCloseButton = true;
                pop.Maximized = true;
                pop.ShowMaximizeButton = true;
                pop.ClientSideEvents.CloseUp = "function(s,e){TransactionsGridView.CancelEdit()}";
                pop.CloseAction = CloseAction.CloseButton;
                pop.SetContent(() =>
                {
                    Html.RenderAction("AddEditTransactionPartial", new { transactionId = ViewBag.TransactionId ?? col.KeyValue, permiteeId = permiteeId });
                });
            }).GetHtml();



        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()